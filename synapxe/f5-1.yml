- name: Parse member list into structured data
  set_fact:
    pool_members: >-
      {{
        members.splitlines()
        | reject('match', '^\\s*$')  # Remove empty lines
        | map('regex_replace', '^([^:]+):(\\d+):(.+)$', '{"host": "\\1", "port": \\2, "name": "\\3"}')
        | map('from_yaml') | list
      }}


    - name: Debug parsed members
      debug:
        var: pool_members


192.168.1.10:80:web01-node1
192.168.1.11:80:web01-node2
192.168.1.12:443:web01-node3


- name: Parse members into list of dictionaries
  set_fact:
    pool_members: >-
      {{
        members.splitlines()
        | reject('match', '^\\s*$')
        | map('regex_replace', '^([^:]+):(\\d+):(.+)$', '{"host": "\1", "port": \2, "name": "\3"}')
        | map('from_yaml')
        | select('defined')
        | list
      }}



---
- name: Add F5 pool members with names
  hosts: localhost
  gather_facts: no
  connection: local

  collections:
    - f5networks.f5_modules

  vars:
    f5_host: "f5.example.com"
    f5_user: "admin"
    f5_password: "your_password"
    validate_certs: false

  vars_prompt:
    - name: pool_name
      prompt: "Enter F5 pool name (e.g. /Common/web01)"
      private: no

    - name: members
      prompt: "Enter pool members (IP:PORT:NAME per line)"
      private: no
      multiline: true

  tasks:
    - name: Parse member input into structured list
      set_fact:
        pool_members: "{{ pool_members | default([]) + [ {'host': item.split(':')[0], 'port': item.split(':')[1] | int, 'name': item.split(':')[2]} ] }}"
      loop: "{{ members.splitlines() }}"
      when: item | trim != "" and (':' in item)
    
    - name: Debug parsed members
      debug:
        var: pool_members

    - name: Add each pool member
      bigip_pool_member:
        server: "{{ f5_host }}"
        user: "{{ f5_user }}"
        password: "{{ f5_password }}"
        validate_certs: "{{ validate_certs }}"
        state: present
        pool: "{{ pool_name }}"
        host: "{{ item.host }}"
        port: "{{ item.port }}"
        name: "{{ item.name }}"
      loop: "{{ pool_members }}"
      delegate_to: localhost



- name: Set pool member session state (enable/disable)
  bigip_pool_member:
    server: "{{ f5_host }}"
    user: "{{ f5_user }}"
    password: "{{ f5_password }}"
    validate_certs: "{{ validate_certs }}"
    state: present
    pool: "{{ pool_name }}"
    host: "{{ item.host }}"
    port: "{{ item.port }}"
    name: "{{ item.name }}"
    session: "{{ session_state }}"
  loop: "{{ pool_members }}"
  delegate_to: localhost

