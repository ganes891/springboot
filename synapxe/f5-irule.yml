---
- name: Manage F5 Maintenance Mode with iRule
  hosts: localhost
  gather_facts: no

  vars:
    f5_host: "f5.example.com"
    f5_user: "admin"
    f5_password: "your_password"
    validate_certs: false
    partition: "Common"
    vs_name: "vs_web01"
    maintenance_irule_name: "maintenance_irule"
    maintenance_message: "<html><body><h1>Site Under Maintenance</h1><p>Please check back later.</p></body></html>"
    maintenance_mode: "start"  # Change to "end" to restore prod iRules

  tasks:

    - name: Update/Create maintenance iRule
      bigip_irule:
        server: "{{ f5_host }}"
        user: "{{ f5_user }}"
        password: "{{ f5_password }}"
        validate_certs: "{{ validate_certs }}"
        name: "{{ maintenance_irule_name }}"
        partition: "{{ partition }}"
        state: present
        content: |
          when HTTP_REQUEST {
              HTTP::respond 503 content {
                  {{ maintenance_message }}
              }
          }
      when: maintenance_mode == "start"
      delegate_to: localhost

    - name: Get current virtual server configuration
      uri:
        url: "https://{{ f5_host }}/mgmt/tm/ltm/virtual/~{{ partition }}~{{ vs_name }}"
        method: GET
        user: "{{ f5_user }}"
        password: "{{ f5_password }}"
        validate_certs: "{{ validate_certs }}"
        return_content: yes
      register: vs_config
      delegate_to: localhost

    - name: Save current iRules attached to VIP
      set_fact:
        original_irules: "{{ vs_config.json.rules | default([]) }}"
      when: maintenance_mode == "start"

    - name: Save original iRules to local file
      copy:
        content: "{{ original_irules | to_nice_json }}"
        dest: "backup_irules_{{ vs_name }}.json"
      when: maintenance_mode == "start"

    - name: Apply maintenance iRule to VIP
      bigip_virtual_server:
        server: "{{ f5_host }}"
        user: "{{ f5_user }}"
        password: "{{ f5_password }}"
        validate_certs: "{{ validate_certs }}"
        name: "{{ vs_name }}"
        partition: "{{ partition }}"
        rules:
          - "{{ maintenance_irule_name }}"
        state: present
      when: maintenance_mode == "start"
      delegate_to: localhost

    - name: Load original iRules from backup file
      slurp:
        src: "backup_irules_{{ vs_name }}.json"
      register: slurped_irules
      when: maintenance_mode == "end"

    - name: Restore production iRules to VIP
      bigip_virtual_server:
        server: "{{ f5_host }}"
        user: "{{ f5_user }}"
        password: "{{ f5_password }}"
        validate_certs: "{{ validate_certs }}"
        name: "{{ vs_name }}"
        partition: "{{ partition }}"
        rules: "{{ (slurped_irules.content | b64decode) | from_json }}"
        state: present
      when: maintenance_mode == "end"
      delegate_to: localhost